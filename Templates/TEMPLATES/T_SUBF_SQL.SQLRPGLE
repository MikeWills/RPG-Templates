000100121106      /copy modules/qcopysrc,hspec_h
000200081104       //*************************************************************************
000300081104       // Program . . . . . T_SCRN
000400081104       //
000500081104       // Created on  . . .
000600081104       //         by  . . .
000700081104       //
000800081104       // Description . . .
000900110512       //
001000110512       // To Compile:
001100121005       // *> CRTSQLRPGI OBJ(&O/&ON) SRCFILE(&L/&F) SRCMBR(&N) DBGVIEW(*SOURCE)
001200081104       //
001300081104       // CHANGE LOG:
001400081104       // Date       | Name            | Description
001500081104       // -----------------------------------------------------------------------
001600081104       //            |                 |
001700081104       //            |                 |
001800081104       //            |                 |
001900081104       //*************************************************************************
002000081104       // Files
002100081104     F
002200081104
002300081104       // Printer/Display Files
002400081104     FT_DSPF_SFLCF   E             WORKSTN sfile(SFL01:rrn01)
002500081104       //*************************************************************************
002600081104       // Named Constants
002700081104     D
002800121106      /copy modules/qcopysrc,status_h
002900081104
003000081104       // Named Indicators
003100081104     D indicatorPtr    S               *   Inz(%Addr(*IN))
003200081104     D                 DS                  Based(IndicatorPtr)
003300121106      /copy modules/qcopysrc,scrn_h
003400081104     D continueProcessing...
003500081104     D                 S               N   inz(*on)
003600081105     D changeMade      S               N
003700081112
003800081112       // SQL Fields
003900110506     D sqlStatement    S           2048A   varying
004000110506     D SqlResult       DS                  qualified
004100121106      /copy modules/qcopysrc,sql_h
004200081104
004300081104       // Subfile  Fields
004400081104     D rrn01           S              4P 0 inz(0)
004500081104
004600081104       //*************************************************************************
004700081104       // Misc Fields
004800081104     D
004900081104
005000081104       //*************************************************************************
005100081104       // External Program Procedures
005200081104
005300081104       // Internal Subprocedures
005400081104     D Init            PR
005500081104     D Main            PR
005600081104     D SubfileFilled   PR              N
005700081104     D ProcessSubfile  PR
005800081104     D Add             PR
005900081104     D Change          PR
006000081104     D Remove          PR
006100081104     D Display         PR
006200081104     D ProcessScreen   PR
006300081104     D  action                        1A   const
006400081104     D ClearScreen     PR
006500081104     D IsValidData     PR              N
006600081104     D MoveToScreen    PR
006700081104     D MoveFromScreen  PR
006800081104     D ResetIndicators...
006900081104     D                 PR
007000081104     D BuildSqlStmt    PR
007100081104     D OpenCursor      PR             5A
007200081104     D FetchNext       PR             5A
007300081104     D CloseCursor     PR             5A
007400081104
007500081104       // External Subprocedures
007600121106       ///copy modules/qsrvsrc,string_h
007700081104
007800081104       //*************************************************************************
007900081104       // Entry Parms
008000081104     D T_SUBF          PR                  extpgm('T_SUBF')
008100081104     D T_SUBF          PI
008200081104       //*************************************************************************
008300081104      /free
008400081104       Init();
008500081104       Main();
008600081104
008700081104       *inlr = *on;
008800081104      /end-free
008900081104
009000081104     P*--------------------------------------------------
009100081104     P* Procedure name: Init
009200081104     P* Purpose:
009300081104     P* Returns:
009400081104     P*--------------------------------------------------
009500081104     P Init            B
009600081104     D Init            PI
009700081104
009800081104      /free
009900090720
010000090720       exec sql
010100090720         set option naming = *sys, commit = *none, usrprf = *user,
010200090720                    dynusrprf = *user, datfmt = *iso, closqlcsr = *endmod;
010300081104
010400081104       pgm = 'T_SUBF';
010500081105       changeMade = *on;
010600081104
010700081104       return;
010800081104
010900081104      /end-free
011000081104     P Init            E
011100081104
011200081104
011300081104     P*--------------------------------------------------
011400081104     P* Procedure name: Main
011500081104     P* Purpose:
011600081104     P* Returns:
011700081104     P*--------------------------------------------------
011800081104     P Main            B
011900081104     D Main            PI
012000081104
012100081104      /free
012200081104
012300081104       dow (not F3) and (not F12);
012400081104
012500090707         sflDsp = SubfileFilled();
012600081104
012700081104         write OVR01;
012800081104         exfmt CTL01;
012900081104         ResetIndicators();
013000081104
013100081104         // *** INSERT CODE HERE ***
013200081104
013300081104       enddo;
013400081104
013500081104       return;
013600081104
013700081104      /end-free
013800081104     P Main            E
013900081104
014000081104
014100081104     P*--------------------------------------------------
014200081104     P* Procedure name: SubfileFilled
014300081104     P* Purpose: Fill the subfile
014400081104     P* Returns:
014500081104     P*--------------------------------------------------
014600081104     P SubfileFilled   B
014700081104     D SubfileFilled   PI              N
014800081104
014900081104     D isFilled        S               N
015000081104
015100081104      /free
015200081104
015300081104       isFilled = *on;
015400081104
015500081104       if (not changeMade);
015600081219         hCsrLoc = hCsrRrn;
015700081104         if (rrn01 > 0);
015800081104           return *on;
015900081104         else;
016000081104           return *off;
016100081104         endif;
016200081104       endif;
016300081104
016400081104       sflClear = *on;
016500081104       write CTL01;
016600081104       sflClear = *off;
016700081104       rrn01 = 0;
016800081219       hCsrLoc = 1;
016900081104
017000081104       BuildSqlStmt();
017100081104
017200081104       if (OpenCursor() = SQL_SUCCESS);
017300081104         dow (FetchNext() = SQL_SUCCESS) and (rrn01 < 9999);
017400081104
017500081104           // *** INSERT CODE HERE ***
017600081104
017700081104           rrn01 += 1;
017800081104           write SFL01;
017900081104
018000081104         enddo;
018100081104       endif;
018200081104
018300081104       CloseCursor();
018400081104
018500081104       if (rrn01 < 1);
018600081104         isFilled = *off;
018700081104       endif;
018800081104
018900081104       return isFilled;
019000081104
019100081104      /end-free
019200081104     P SubfileFilled   E
019300081104
019400081104
019500081104     P*--------------------------------------------------
019600081104     P* Procedure name: ProcessSubfile
019700081104     P* Purpose:
019800081104     P* Returns:
019900081104     P*--------------------------------------------------
020000081104     P ProcessSubfile  B
020100081104     D ProcessSubfile  PI
020200081104
020300081104      /free
020400081104
020500081104       monitor;
020600081104
020700081104         readc SFL01;
020800081104
020900081104         dow (not %eof());
021000081104
021100081104           // *** INSERT CODE HERE ***
021200081104
021300081104           sel = ' ';
021400081104           update SFL01;
021500081104
021600081104           readc SFL01;
021700081104
021800081104         enddo;
021900081104
022000081104       on-error *all;
022100081104         // add error-handling code if needed
022200081104       endmon;
022300081104
022400081104       return;
022500081104
022600081104      /end-free
022700081104     P ProcessSubfile  E
022800081104
022900081104
023000081104     P*--------------------------------------------------
023100081104     P* Procedure name: Add
023200081104     P* Purpose:
023300081104     P* Returns:
023400081104     P*--------------------------------------------------
023500081104     P Add             B
023600081104     D Add             PI
023700081104
023800081104      /free
023900081104
024000081104       // *** INSERT CODE HERE ***
024100081104
024200081104       return;
024300081104
024400081104      /end-free
024500081104     P Add             E
024600081104
024700081104
024800081104     P*--------------------------------------------------
024900081104     P* Procedure name: Change
025000081104     P* Purpose:
025100081104     P* Returns:
025200081104     P*--------------------------------------------------
025300081104     P Change          B
025400081104     D Change          PI
025500081104
025600081104      /free
025700081104
025800081104       // *** INSERT CODE HERE ***
025900081104
026000081104       return;
026100081104
026200081104      /end-free
026300081104     P Change          E
026400081104
026500081104
026600081104     P*--------------------------------------------------
026700081104     P* Procedure name:  Remove
026800081104     P* Purpose:
026900081104     P* Returns:
027000081104     P*--------------------------------------------------
027100081104     P Remove          B
027200081104     D Remove          PI
027300081104
027400081104      /free
027500081104
027600081104       // *** INSERT CODE HERE ***
027700081104
027800081104       return;
027900081104
028000081104      /end-free
028100081104     P Remove          E
028200081104
028300081104
028400081104     P*--------------------------------------------------
028500081104     P* Procedure name: Display
028600081104     P* Purpose:
028700081104     P* Returns:
028800081104     P*--------------------------------------------------
028900081104     P Display         B
029000081104     D Display         PI
029100081104
029200081104      /free
029300081104
029400081104       // *** INSERT CODE HERE ***
029500081104
029600081104       return;
029700081104
029800081104      /end-free
029900081104     P Display         E
030000081104
030100081104
030200081104     P*--------------------------------------------------
030300081104     P* Procedure name: ProcessScreen
030400081104     P* Purpose:
030500081104     P* Returns:
030600081104     P*--------------------------------------------------
030700081104     P ProcessScreen   B
030800081104     D ProcessScreen   PI
030900081104     D  action                        1A   const
031000081104
031100081104      /free
031200081104
031300081104       // *** INSERT CODE HERE ***
031400081104
031500081104       return;
031600081104
031700081104      /end-free
031800081104     P ProcessScreen   E
031900081104
032000081104
032100081104     P*--------------------------------------------------
032200081104     P* Procedure name: ClearScreen
032300081104     P* Purpose:
032400081104     P* Returns:
032500081104     P*--------------------------------------------------
032600081104     P ClearScreen     B
032700081104     D ClearScreen     PI
032800081104
032900081104      /free
033000081104
033100081104       // *** INSERT CODE HERE ***
033200081104
033300081104       return;
033400081104
033500081104      /end-free
033600081104     P ClearScreen     E
033700081104
033800081104
033900081104     P*--------------------------------------------------
034000081104     P* Procedure name: IsValidData
034100081104     P* Purpose: Validate the data on the screen
034200081104     P* Returns: True or False
034300081104     P*--------------------------------------------------
034400081104     P IsValidData     B
034500081104     D IsValidData     PI              N
034600081104
034700081104     D isValid         S               N
034800081104
034900081104      /free
035000081104
035100081104       isValid = *on;
035200081104
035300081104       // *** INSERT CODE HERE ***
035400081104
035500081104       return isValid;
035600081104
035700081104      /end-free
035800081104     P IsValidData     E
035900081104
036000081104
036100081104     P*--------------------------------------------------
036200081104     P* Procedure name: MoveToScreen
036300081104     P* Purpose:
036400081104     P* Returns:
036500081104     P*--------------------------------------------------
036600081104     P MoveToScreen    B
036700081104     D MoveToScreen    PI
036800081104
036900081104      /free
037000081104
037100081104       // *** INSERT CODE HERE ***
037200081104
037300081104       return;
037400081104
037500081104      /end-free
037600081104     P MoveToScreen    E
037700081104
037800081104
037900081104     P*--------------------------------------------------
038000081104     P* Procedure name: MoveFromScreen
038100081104     P* Purpose:
038200081104     P* Returns:
038300081104     P*--------------------------------------------------
038400081104     P MoveFromScreen  B
038500081104     D MoveFromScreen  PI
038600081104
038700081104      /free
038800081104
038900081104       // *** INSERT CODE HERE ***
039000081104
039100081104       return;
039200081104
039300081104      /end-free
039400081104     P MoveFromScreen  E
039500081104
039600081104
039700081104     P*--------------------------------------------------
039800081104     P* Procedure name: ResetIndicators
039900081104     P* Purpose:
040000081104     P* Returns:
040100081104     P*--------------------------------------------------
040200081104     P ResetIndicators...
040300081104     P                 B
040400081104     D ResetIndicators...
040500081104     D                 PI
040600081104
040700081104      /free
040800081104
040900081104       // *** INSERT CODE HERE ***
041000081104
041100081104       return;
041200081104
041300081104      /end-free
041400081104     P ResetIndicators...
041500081104     P                 E
041600081104
041700081104
041800081104     P*--------------------------------------------------
041900081104     P* Procedure name: BuildSqlStmt
042000081104     P* Purpose:
042100081104     P* Returns:
042200081104     P*--------------------------------------------------
042300081104     P BuildSqlStmt    B
042400081104     D BuildSqlStmt    PI
042500081104
042600081104      /free
042700081104
042800081218       gSqlStatement = ' ';
042900081104
043000081104       return;
043100081104
043200081104      /end-free
043300081104     P BuildSqlStmt    E
043400081104
043500081104
043600081104     P*--------------------------------------------------
043700081104     P* Procedure name: OpenCursor
043800081104     P* Purpose:
043900081104     P* Returns:
044000081104     P*--------------------------------------------------
044100081104     P OpenCursor      B
044200081104     D OpenCursor      PI             5A
044300090706      /free
044400090706       exec sql
044500090706         close c1;
044600090706       exec sql
044700090706         prepare sel from :gsqlstatement;
044800081104
044900090706       if sqlStt = SQL_SUCCESS;
045000090706         exec sql
045100090706           declare c1 cursor for sel;
045200090706         exec sql
045300090706           open c1;
045400090706       endif;
045500081104
045600090706       return sqlStt;
045700090706      /end-free
045800081104     P OpenCursor      E
045900081104
046000081104
046100081104     P*--------------------------------------------------
046200081104     P* Procedure name: FetchNext
046300081104     P* Purpose:
046400081104     P* Returns:
046500081104     P*--------------------------------------------------
046600081104     P FetchNext       B
046700081104     D FetchNext       PI             5A
046800090706      /free
046900090706       exec sql
047000090706         fetch c1 into :gresultds;
047100090706       return  sqlstt;
047200090706      /end-free
047300081104     P FetchNext       E
047400081104
047500081104
047600081104     P*--------------------------------------------------
047700081104     P* Procedure name: CloseCusor
047800081104     P* Purpose:
047900081104     P* Returns:
048000081104     P*--------------------------------------------------
048100081104     P CloseCursor     B
048200081104     D CloseCursor     PI             5A
048300090706      /free
048400090706       exec sql
048500090706         close c1;
048600090706       return sqlstt;
048700090706      /end-free
048800081104     P CloseCursor     E
048900081104
049000081104
049100081104     P*--------------------------------------------------
049200081104     P* Procedure name: Template
049300081104     P* Purpose:
049400081104     P* Returns:
049500081104     P*--------------------------------------------------
049600081104     P*Template        B
049700081104     D*Template        PI
049800081104      *
049900081104      */free
050000081104      *
050100081104      *
050200081104      *
050300081104      * return;
050400081104      *
050500081104      */end-free
050600081104     P*Template        E
050700081104
